// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

model menu_table {
  id                   Int                   @id @default(autoincrement())
  path                 String
  // label is for showing the name of the menu
  label                String                @db.VarChar(100)
  is_first_level       Boolean
  is_second_level      Boolean
  is_third_level       Boolean
  is_active            Boolean               @default(true)
  // title is for showing the name of the page
  title                String?
  account_id           Int?
  master_account       master_account?       @relation(references: [id], fields: [account_id])
  business_unit_id     Int?
  master_business_unit master_business_unit? @relation(references: [id], fields: [business_unit_id])
  user_permitted_menu  user_permitted_menu[]
  parent_menu_id       Int?
  has_sub_menu         Boolean               @default(false)
}

model user_permitted_menu {
  id                   Int                  @id @default(autoincrement())
  user_id              Int
  user                 user                 @relation(references: [id], fields: [user_id])
  menu_id              Int
  menu                 menu_table           @relation(references: [id], fields: [menu_id])
  account_id           Int
  master_account       master_account       @relation(references: [id], fields: [account_id])
  business_unit_id     Int
  master_business_unit master_business_unit @relation(references: [id], fields: [business_unit_id])
  is_create            Boolean              @default(false)
  is_edit              Boolean              @default(false)
  is_view              Boolean              @default(false)
  is_delete            Boolean              @default(false)
  is_active            Boolean              @default(true)
}

model master_account {
  id                           Int                            @id @default(autoincrement())
  account_name                 String
  description                  String?
  master_business_unit         master_business_unit[]
  menu_table                   menu_table[]
  user                         user[]
  is_active                    Boolean                        @default(true)
  employee                     employee[]
  workplace                    workplace[]
  department                   department[]
  designation                  designation[]
  user_permitted_business_unit user_permitted_business_unit[]
  user_permitted_menu          user_permitted_menu[]
  master_item_category         master_item_category[]
  master_item                  master_item[]
}

model master_business_unit {
  id                           Int                            @id @default(autoincrement())
  business_unit_name           String
  description                  String?
  account_id                   Int
  master_account               master_account?                @relation(references: [id], fields: [account_id])
  menu_table                   menu_table[]
  is_active                    Boolean                        @default(true)
  base_currency_id             Int?
  master_currency              master_currency?               @relation(references: [id], fields: [base_currency_id])
  language                     String?
  employee                     employee[]
  workplace                    workplace[]
  department                   department[]
  designation                  designation[]
  user_permitted_business_unit user_permitted_business_unit[]
  user_permitted_menu          user_permitted_menu[]
  master_item_category         master_item_category[]
  master_item                  master_item[]
}

model workplace {
  id                   Int                   @id @default(autoincrement())
  workplace_name       String                @db.VarChar(100)
  description          String?
  address              String?
  account_id           Int
  master_account       master_account?       @relation(references: [id], fields: [account_id])
  business_unit_id     Int?
  master_business_unit master_business_unit? @relation(references: [id], fields: [business_unit_id])
  is_active            Boolean               @default(true)
  employee             employee[]
}

model master_unit_of_measurement {
  id                       Int           @id @default(autoincrement())
  unit_of_measurement_name String        @db.VarChar(100)
  description              String?
  is_active                Boolean       @default(true)
  master_item              master_item[]
}

model master_currency {
  id                   Int                    @id @default(autoincrement())
  currency_name        String                 @db.VarChar(100)
  description          String?
  is_active            Boolean                @default(true)
  master_item          master_item[]
  master_business_unit master_business_unit[]
}

model master_item_category {
  id                   Int                   @id @default(autoincrement())
  item_category_name   String                @db.VarChar(100)
  description          String?
  account_id           Int?
  master_account       master_account?       @relation(references: [id], fields: [account_id])
  business_unit_id     Int?
  master_business_unit master_business_unit? @relation(references: [id], fields: [business_unit_id])
  is_active            Boolean               @default(true)
  master_item          master_item[]
}

model master_item {
  id                         Int                         @id @default(autoincrement())
  item_name                  String                      @db.VarChar(100)
  base_price                 Float
  base_price_currency_id     Int?
  master_currency            master_currency?            @relation(references: [id], fields: [base_price_currency_id])
  description                String?
  account_id                 Int?
  master_account             master_account?             @relation(references: [id], fields: [account_id])
  business_unit_id           Int?
  master_business_unit       master_business_unit?       @relation(references: [id], fields: [business_unit_id])
  is_active                  Boolean                     @default(true)
  category_id                Int?
  master_item_category       master_item_category?       @relation(references: [id], fields: [category_id])
  unit_of_measurement_id     Int?
  master_unit_of_measurement master_unit_of_measurement? @relation(references: [id], fields: [unit_of_measurement_id])
}

model department {
  id                   Int                   @id @default(autoincrement())
  department_name      String                @db.VarChar(100)
  description          String?
  account_id           Int
  master_account       master_account?       @relation(references: [id], fields: [account_id])
  business_unit_id     Int?
  master_business_unit master_business_unit? @relation(references: [id], fields: [business_unit_id])
  is_active            Boolean               @default(true)
  employee             employee[]
}

model designation {
  id                   Int                   @id @default(autoincrement())
  designation_name     String                @db.VarChar(100)
  description          String?
  account_id           Int
  master_account       master_account?       @relation(references: [id], fields: [account_id])
  business_unit_id     Int?
  master_business_unit master_business_unit? @relation(references: [id], fields: [business_unit_id])
  is_active            Boolean               @default(true)
  employee             employee[]
}

model user {
  id                           Int                            @id @default(autoincrement())
  username                     String                         @db.VarChar(100)
  email                        String                         @unique @db.VarChar(100)
  password                     String
  account_id                   Int
  master_account               master_account?                @relation(references: [id], fields: [account_id])
  user_type_id                 Int
  user_type                    user_type                      @relation(references: [id], fields: [user_type_id])
  employee                     employee?
  is_active                    Boolean                        @default(true)
  user_permitted_business_unit user_permitted_business_unit[]
  user_permitted_menu          user_permitted_menu[]
}

model user_permitted_business_unit {
  id                   Int                  @id @default(autoincrement())
  user_id              Int
  user                 user                 @relation(references: id, fields: user_id)
  account_id           Int
  master_account       master_account       @relation(references: id, fields: account_id)
  business_unit_id     Int
  master_business_unit master_business_unit @relation(references: id, fields: business_unit_id)
  is_active            Boolean              @default(true)
}

model user_type {
  id             Int     @id @default(autoincrement())
  user_type_name String  @db.VarChar(100)
  description    String?
  is_active      Boolean @default(true)
  user           user[]
}

model employee {
  id                   Int                   @id @default(autoincrement())
  employee_name        String
  employee_code        String
  mobile_number        String?
  personal_email       String?
  official_email       String?
  profile_picture_id   Int?
  bio                  String?
  address              String?
  account_id           Int
  master_account       master_account?       @relation(references: [id], fields: [account_id])
  business_unit_id     Int?
  master_business_unit master_business_unit? @relation(references: [id], fields: [business_unit_id])
  user_id              Int                   @unique
  user                 user                  @relation(references: id, fields: user_id)
  workplace_id         Int?
  workplace            workplace?            @relation(references: [id], fields: [workplace_id])
  department_id        Int?
  department           department?           @relation(references: [id], fields: [department_id])
  designation_id       Int?
  designation          designation?          @relation(references: [id], fields: [designation_id])
  is_active            Boolean               @default(true)
}

model file_table {
  id        Int     @id @default(autoincrement())
  type_id   Int
  file_id   Int
  is_active Boolean @default(true)
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
